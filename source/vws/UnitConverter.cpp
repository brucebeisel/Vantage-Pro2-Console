/* 
 * Copyright (C) 2025 Bruce Beisel
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#include "UnitConverter.h"

namespace vws {

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
Temperature
UnitConverter::toCelsius(Temperature temperature) {
    return (temperature - CELSIUS_OFFSET) / CELSIUS_OFFSET;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
Rainfall
UnitConverter::toMillimeter(Rainfall depth) {
    return depth * MILLIMETER_FACTOR;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
Pressure
UnitConverter::toMillibars(Pressure pressure) {
    return pressure * MILLIBAR_FACTOR;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
Speed
UnitConverter::toMetersPerSecond(Speed speed) {
    return speed * METERS_PER_SECOND_FACTOR;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
Speed
UnitConverter::toKilometersPerHour(Speed speed) {
    return speed * KILOMETERS_PER_HOUR_FACTOR;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
Speed
UnitConverter::toKnots(Speed speed) {
    return speed * KNOTS_FACTOR;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
Elevation
UnitConverter::feetToMillimeters(Elevation elevation) {
    return elevation * MILLIMETERS_FACTOR;
}
}
